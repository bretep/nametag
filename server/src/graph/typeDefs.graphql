################################################################################
## Custom Scalar Types
################################################################################

# Date represented as an ISO8601 string.
scalar Date

# A unique account in the system. In the future this information will be encrypted.
type User {

  # The ID of the user
  id: ID!

  # Display names utilized by this user
  displayNames: [String]

  # Icons uploaded by this user
  icons: [String]

  # Badges owned by this user
  badges: [Badge]

  # Nametags created by this user
  nametags: [Nametag]

}

# A room where discussions can take place
type Room {

  # The ID of the room
  id: ID!

  # The title of the room
  title: String!

  # The description of the room
  description: String!

  # The url of the room's image
  image: String!

  # The norms of the room
  norms: [String!]

  # The room's moderator
  mod: User

  # The date when the room was created
  created_at: Date!

  # The date when the room closes
  closed_at: Date!

  # The messages sent in the room
  messages: [Message]

  # The nametags of the individuals in the room
  nametags: [Nametag]

}

# A message in a room
type Message {

  # The ID of the message
  id: ID!

  # The text of the message
  text: String

  # The nametag ID of the message's author
  author: Nametag

  # The nametag ID of the message's recipient. If this is defined then this is a direct message.
  recipient: Nametag

  # The id of the room that where the message was created
  room: Room

  # Indicates whether the message has been saved for viewing after the room has closed
  saved: Boolean

  # Time when the message was created
  created_at: Date

}

# A representation of a user's identity in a particular room
type Nametag {

  # The ID of the nametag
  id: ID!

  # The name of the user
  displayName: String

  # The url of the user's icon
  icon: String

  # Further information about the user
  bio: String

  # Badges attached to this nametag
  badges: [Badge]

  # Time when the nametag was created
  created_at: Date!

}

# A verified component of a user's identity
type Badge {
  # The ID of the badge
  id: ID!

  # The name of the badge
  name: String!

  # The badges description
  description: String!

  # Notes appended to the badge
  notes: [Note]
}

# A note attached to a badge
type Note {

  # The date when the note was created
  date: Date!

  # The text of the note
  text: String!

}

# The queries available for Nametag
type RootQuery {

  # Retrieves a single room based on the id
  room(id:ID!): Room

  # Retrieves all active rooms in the system
  rooms: [Room]

  # Retrieves the current user
  me: User

}

schema {
  query: RootQuery
}
